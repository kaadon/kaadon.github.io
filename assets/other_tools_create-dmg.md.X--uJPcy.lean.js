import{_ as t,C as i,c as p,o as l,j as a,$ as o,G as r,a as n,w as d}from"./chunks/framework.Dso0fr_r.js";const D=JSON.parse('{"title":"打包DMG","description":"","frontmatter":{},"headers":[],"relativePath":"other/tools/create-dmg.md","filePath":"other/tools/create-dmg.md","lastUpdated":1746423909000}'),h={name:"other/tools/create-dmg.md"},c={id:"打包dmg",tabindex:"-1"};function k(g,s,m,u,F,C){const e=i("center");return l(),p("div",null,[a("h1",c,[r(e,null,{default:d(()=>s[0]||(s[0]=[n("打包DMG")])),_:1}),s[1]||(s[1]=n()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#打包dmg","aria-label":'Permalink to "<center>打包DMG</center>"'},"​",-1))]),s[3]||(s[3]=o(`<h2 id="_1-参数说明" tabindex="-1">1. 参数说明 <a class="header-anchor" href="#_1-参数说明" aria-label="Permalink to &quot;1. 参数说明&quot;">​</a></h2><blockquote><p>create-dmg 工具用于在 macOS 上创建 DMG 文件。以下是常用参数及其说明：</p></blockquote><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--overwrite：如果存在，覆盖现有的 DMG 文件。</span></span>
<span class="line"><span>--dmg-title：DMG 窗口的标题。</span></span>
<span class="line"><span>--window-size：DMG 窗口的大小（宽度 高度）。</span></span>
<span class="line"><span>--icon：DMG 中使用的图标文件路径。</span></span>
<span class="line"><span>--background：DMG 窗口的背景图像路径。</span></span>
<span class="line"><span>--icon-size：DMG 窗口中图标的大小。</span></span>
<span class="line"><span>--app-drop-link：在 DMG 中添加指向 Applications 文件夹的链接。</span></span>
<span class="line"><span>--hide-extension：隐藏 DMG 文件的扩展名。</span></span>
<span class="line"><span>--format：DMG 文件的格式（例如，UDBZ，UDZO）。</span></span>
<span class="line"><span>--volname：DMG 的卷名。</span></span>
<span class="line"><span>--no-internet-enable：不启用 DMG 的互联网访问。</span></span>
<span class="line"><span>--eula：挂载 DMG 时显示的 EULA 文件路径。</span></span></code></pre></div><h2 id="_2-示例" tabindex="-1">2. 示例 <a class="header-anchor" href="#_2-示例" aria-label="Permalink to &quot;2. 示例&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    create-dmg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;KaadonTools Installer.dmg&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./KaadonTools</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --overwrite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dmg-title=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyApp Installer&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --window-size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 800</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 400</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --icon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./appicon.png</span></span></code></pre></div>`,5))])}const G=t(h,[["render",k]]);export{D as __pageData,G as default};
